(()=>{"use strict";const t=16,e=16,a=null,n=[[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,1,1,1,1,0,0,0,0,0,0,0],[0,0,0,0,0,1,0,0,1,0,0,0,0,0,0,0],[0,0,0,0,0,1,0,0,1,0,0,0,0,0,0,0],[0,0,0,0,0,1,0,0,1,0,0,0,0,0,0,0],[0,0,0,0,0,1,1,1,1,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]],l=[[255,255,255,255],[0,0,0,255]];let o=null,d=null;function i(t){o=t}function c(t){d=t}const g=document.createElement("canvas"),s=g.getContext("2d");g.style.backgroundColor="white",g.width=t,g.height=e;let u=4;g.style.width=t*u+"px",g.style.height=e*u+"px",g.style.imageRendering="pixelated",g.addEventListener("wheel",(a=>{a.preventDefault();const n=Math.sign(a.deltaY);u+=n,g.style.width=t*u+"px",g.style.height=e*u+"px"})),document.body.append(g);const r=s.createImageData(16,16);for(let t=0;t<16;t++)for(let e=0;e<16;e++){const o=a?a[n[t][e]]:l[n[t][e]],d=4*(16*t+e);r.data[d]=o[0],r.data[d+1]=o[1],r.data[d+2]=o[2],r.data[d+3]=o[3]}s.putImageData(r,0,0),g.addEventListener("click",(t=>{i(s.getImageData(0,0,16,16));const e=g.getBoundingClientRect(),a=Math.floor((t.clientX-e.left)/u),n=4*(16*Math.floor((t.clientY-e.top)/u)+a);r.data[n]=0,r.data[n+1]=0,r.data[n+2]=0,r.data[n+3]=255,s.putImageData(r,0,0),c(s.getImageData(0,0,16,16))})),g.addEventListener("mousemove",(t=>{if(1===t.buttons){i(s.getImageData(0,0,16,16));const e=g.getBoundingClientRect(),a=Math.floor((t.clientX-e.left)/u),n=4*(16*Math.floor((t.clientY-e.top)/u)+a);r.data[n]=0,r.data[n+1]=0,r.data[n+2]=0,r.data[n+3]=255,s.putImageData(r,0,0),c(s.getImageData(0,0,16,16))}})),document.addEventListener("keydown",(t=>{"z"===t.key&&t.metaKey&&(t.preventDefault(),o&&(console.log("undo"),s.putImageData(o,0,0),c(o),i(null)))}))})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,