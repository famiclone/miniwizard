(()=>{"use strict";class t{constructor(t="New layer",e=!1){this.name=t,this.locked=e,this.opacity=255,this.visible=!0,this.data=[[]]}}const e=new class{constructor(t="New palette"){this.name=t,this.colors=[[]]}addColor(t){this.colors.push(t)}removeColor(t){this.colors.splice(t,1)}setColor(t,e){this.colors[t]=e}getColor(t){return this.colors[t]}}("Default");e.colors=[[0,0,0,255],[252,252,252,255],[248,248,248,255],[188,188,188,255],[124,124,124,255],[164,228,252,255],[60,188,252,255],[0,120,248,255],[0,0,252,255],[184,184,248,255],[104,136,252,255],[0,88,248,255],[0,0,188,255],[216,184,248,255],[152,120,248,255],[104,68,252,255],[68,40,188,255],[248,184,248,255],[248,120,248,255],[216,0,204,255],[148,0,132,255],[248,164,192,255],[248,88,152,255],[228,0,88,255],[168,0,32,255],[240,208,176,255],[248,120,88,255],[248,56,0,255],[168,16,0,255],[252,224,168,255],[252,160,68,255],[228,92,16,255],[136,20,0,255],[248,216,120,255],[248,184,0,255],[172,124,0,255],[80,40,0,255],[216,248,120,255],[184,248,24,255],[0,184,0,255],[0,120,0,255],[184,248,184,255],[88,216,84,255],[0,168,0,255],[0,104,0,255],[184,248,216,255],[88,248,152,255],[0,168,68,255],[0,88,0,255],[0,252,252,255],[0,232,216,255],[0,136,136,255],[0,64,88,255],[248,216,248,255],[120,120,120,255]];class s{constructor(){this.data=[],this.width=16,this.height=16,this.palette=e,this.data=[new t("Background",!0)]}}class i{constructor(t){this.app=t,this.items=[],this.cursor=this.items.length-1}add(t){this.items.push(t),this.cursor=this.items.length-1}clearFromCursor(){this.items.splice(this.cursor+1)}undo(){this.cursor>0&&(this.cursor--,this.app.ctx.putImageData(this.items[this.cursor],0,0))}redo(){this.cursor<this.items.length-1&&(this.cursor++,this.app.ctx.putImageData(this.items[this.cursor],0,0))}}class o{constructor(t){this.selector=t,this.element=document.querySelector(`#${t}`),this.closeBtn=this.element.querySelector(`#btnClose${t}`),this.closeBtn.addEventListener("click",(()=>{this.close()}))}toggle(){this.element.hasAttribute("open")?this.close():this.open()}open(){this.element.setAttribute("open","")}close(){this.element.removeAttribute("open"),window.localStorage.setItem("startup","false")}}class a{constructor(t,e){this.selector=t,this.app=e,this.commands={n:()=>{this.app.newFile()},e:()=>{},w:t=>{this.app.saveFile(t)},h:()=>{this.app.ui.helpDialog.toggle(),this.app.ui.log("Help")},p:()=>{this.app.ui.paletteDialog.toggle(),this.app.ui.log("Open palette")},P:()=>{},log:t=>{this.app.ui.log(t)}},this.element=document.querySelector(`#${t}`),this.element.addEventListener("keydown",(t=>{"Enter"===t.key&&(this.execute(this.element.value),this.close())}))}open(){this.element.classList.add("open"),this.element.focus(),this.element.value=":"}close(){this.element.classList.remove("open"),this.element.value=""}execute(t){t=t.slice(1);const[e,...s]=t.split(" ");console.log(e,s),e in this.commands?this.commands[e](...s):this.app.ui.log(`command not found: ${e}`)}}class l{constructor(t){this.title=t,this.id=Date.now().toString(),this.element=document.createElement("div"),this.tabTitle=document.createElement("span"),this.element.id=this.id,this.element.classList.add("tab"),this.closeBtn=document.createElement("button"),this.closeBtn.id=`#btnClose${this.id}`,this.closeBtn.textContent="X",this.tabTitle.textContent=t,this.element.append(this.tabTitle,this.closeBtn),document.querySelector("#tabs").appendChild(this.element),this.closeBtn.addEventListener("click",(()=>{this.close()}))}deactivateTab(){this.element.classList.remove("active")}activateTab(){this.element.classList.add("active")}rename(t){this.title=t,this.tabTitle.textContent=t}close(){this.element.removeAttribute("open")}}class h{constructor(t){this.app=t,this.startupDialog=new o("DialogStartup"),this.helpDialog=new o("DialogHelp"),this.inputCommand=new a("InputCmd",this.app),this.zoomElement=document.querySelector("#zoom"),this.primaryColorElement=document.querySelector("#toolPrColor"),this.statusLine=document.querySelector("#statusLine"),this.paletteDialog=new o("DialogPalette"),this.paletteWrap=document.querySelector("#paletteWrap"),this.paletteTitle=document.querySelector("#paletteTitle"),this.tabs=document.querySelector("#tabs"),this.app=t,window.localStorage.getItem("startup")&&"true"!==window.localStorage.getItem("startup")||this.startupDialog.open(),this.tabs.append(new l("Untitled").element),this.update()}renderPalette(){this.paletteWrap.innerHTML="",this.paletteTitle.textContent=this.app.palette.name,this.app.palette.colors.forEach(((t,e)=>{const s=document.createElement("div");s.classList.add("color-swatch"),s.style.backgroundColor=`rgba(${t[0]}, ${t[1]}, ${t[2]}, ${t[3]})`,this.paletteWrap.append(s),s.addEventListener("click",(()=>{this.app.primaryColor=t,this.update()}))}))}log(t){this.to&&clearTimeout(this.to),this.statusLine.classList.add("open"),this.statusLine.textContent=t,this.to=setTimeout((()=>{this.statusLine.classList.remove("open"),this.statusLine.textContent=""}),2e3)}update(){this.renderPalette(),this.zoomElement.textContent=100*this.app.zoom+"%",this.primaryColorElement.style.backgroundColor=`rgba(${this.app.primaryColor[0]}, ${this.app.primaryColor[1]}, ${this.app.primaryColor[2]}, ${this.app.primaryColor[3]})`}}const n=new class{constructor(){this.history=new i(this),this.zoom=25,this.tool="pencil",this.color=1,this.files=[new s,new s],this.fileIndex=0,this.palette=e,this.primaryColor=this.palette.getColor(0),this.palettes=[this.palette],this.ui=new h(this),this.layerIndex=0,this.canvas=document.createElement("canvas"),this.ctx=this.canvas.getContext("2d"),this.canvas.style.backgroundColor="white",this.canvas.width=this.files[this.fileIndex].width,this.canvas.height=this.files[this.fileIndex].height,this.canvas.style.width=this.files[this.fileIndex].width*this.zoom+"px",this.canvas.style.height=this.files[this.fileIndex].height*this.zoom+"px",this.canvas.style.imageRendering="pixelated",this.canvas.addEventListener("wheel",(t=>{t.preventDefault(),this.zoomChange(t.deltaY)})),document.body.querySelector("#main").append(this.canvas);const t=this.ctx.createImageData(16,16);for(let s=0;s>this.files[this.fileIndex].data.length;s++)for(let i=0;i<16;i++)for(let o=0;o<16;o++){const a=this.files[this.fileIndex].palette?this.files[this.fileIndex].palette.getColor(this.files[this.fileIndex].data[s].data[i][o]):e.getColor(this.files[this.fileIndex].data[s].data[i][o]),l=4*(16*i+o);t.data[l]=a[0],t.data[l+1]=a[1],t.data[l+2]=a[2],t.data[l+3]=a[3]}this.ctx.putImageData(t,0,0),this.canvas.addEventListener("click",(e=>{this.history.add(this.ctx.getImageData(0,0,16,16));const s=this.canvas.getBoundingClientRect(),i=Math.floor((e.clientX-s.left)/this.zoom),o=4*(16*Math.floor((e.clientY-s.top)/this.zoom)+i);t.data[o]=this.primaryColor[0],t.data[o+1]=this.primaryColor[1],t.data[o+2]=this.primaryColor[2],t.data[o+3]=this.primaryColor[3],this.ctx.putImageData(t,0,0),this.history.add(this.ctx.getImageData(0,0,16,16))})),this.canvas.addEventListener("mousemove",(e=>{if(1===e.buttons){this.history.add(this.ctx.getImageData(0,0,16,16));const s=this.canvas.getBoundingClientRect(),i=Math.floor((e.clientX-s.left)/this.zoom),o=4*(16*Math.floor((e.clientY-s.top)/this.zoom)+i);t.data[o]=this.primaryColor[0],t.data[o+1]=this.primaryColor[1],t.data[o+2]=this.primaryColor[2],t.data[o+3]=this.primaryColor[3],this.ctx.putImageData(t,0,0),this.history.add(this.ctx.getImageData(0,0,16,16))}})),document.addEventListener("keydown",(t=>{if(t.metaKey&&"="===t.key)return t.preventDefault(),void this.zoomIn();if(t.metaKey&&"-"===t.key)return t.preventDefault(),void this.zoomOut();if(t.metaKey&&"0"===t.key)return t.preventDefault(),void this.zoomReset();if(t.metaKey&&"z"===t.key)return t.preventDefault(),void this.undo();switch(t.key){case"Space":this.ui.inputCommand.element.classList.contains("open")||(t.preventDefault(),this.canvas.style.cursor="grab",this.canvas.addEventListener("mousemove",(t=>{1===t.buttons&&(this.canvas.style.cursor="grabbing",this.canvas.style.left=`${t.movementX}px`,this.canvas.style.top=`${t.movementY}px`)})));break;case"?":t.preventDefault(),this.ui.helpDialog.toggle();break;case"Escape":t.preventDefault(),this.ui.inputCommand.element.classList.contains("open")?this.ui.inputCommand.close():this.ui.inputCommand.open()}})),document.addEventListener("keyup",(t=>{if(" "===t.key)t.preventDefault(),this.canvas.style.cursor="default"})),this.update()}update(){this.canvas.style.width=this.files[this.fileIndex].width*this.zoom+"px",this.canvas.style.height=this.files[this.fileIndex].height*this.zoom+"px",this.ui.update()}fill(t,e,s,i){const o=this.files[this.fileIndex].data[this.layerIndex].data;t<0||t>=o.length||e<0||e>=o[0].length||o[t][e]!==i&&o[t][e]===s&&(o[t][e]=i,this.fill(t+1,e,s,i),this.fill(t-1,e,s,i),this.fill(t,e+1,s,i),this.fill(t,e-1,s,i))}newFile(){console.log("new")}saveFile(t){console.log("save file as "+t)}undo(){this.history.undo()}redo(){this.history.redo()}zoomChange(t=0){const e=Math.sign(t);this.zoom+=8*e,this.update()}zoomIn(){console.log("zoom in"),this.zoom<128&&this.zoomChange(1)}zoomOut(){console.log("zoom out"),this.zoom>1&&this.zoomChange(-1)}zoomReset(){console.log("zoom reset"),this.zoom=25,this.update()}changeTool(t){this.tool=t}};window.app=n})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,