(()=>{"use strict";class t{constructor(t){this.selector=t,this.element=document.querySelector(`#${t}`),this.closeBtn=this.element.querySelector(`#btnClose${t}`),this.closeBtn.addEventListener("click",(()=>{this.close()}))}toggle(){this.element.hasAttribute("open")?this.close():this.open()}open(){this.element.setAttribute("open","")}close(){this.element.removeAttribute("open"),window.localStorage.setItem("startup","false")}}class e{constructor(){this.width=16,this.height=16,this.palette=[],this.data=Array(1).fill(Array(16).fill(Array(16).fill(0)))}}class s{constructor(t,e){this.selector=t,this.app=e,this.commands={n:()=>{this.app.newFile()},e:()=>{},w:()=>{},h:()=>{this.app.helpDialog.toggle()},p:()=>{},P:()=>{}},this.element=document.querySelector(`#${t}`),this.element.addEventListener("keydown",(t=>{"Enter"===t.key&&(this.execute(this.element.value),this.close())}))}open(){this.element.classList.add("open"),this.element.focus(),this.element.value=":"}close(){this.element.classList.remove("open"),this.element.value=""}execute(t){t=t.slice(1);const[e,...s]=t.split(" ");e in this.commands&&this.commands[e](...s)}}const i=[[0,0,0,0],[255,255,255,255],[0,0,0,255]];new class{constructor(){this.history={prev:null,next:null},this.tool="pencil",this.layer=0,this.color=1,this.file=new e,this.ui=document.querySelector("#ui"),this.startupDialog=new t("DialogStartup"),this.helpDialog=new t("DialogHelp"),this.inputCommand=new s("InputCmd",this),this.canvas=document.createElement("canvas"),this.ctx=this.canvas.getContext("2d"),this.canvas.style.backgroundColor="white",this.canvas.width=this.file.width,this.canvas.height=this.file.height,window.localStorage.getItem("startup")&&"true"!==window.localStorage.getItem("startup")||this.startupDialog.open();let a=4;this.canvas.style.width=this.file.width*a+"px",this.canvas.style.height=this.file.height*a+"px",this.canvas.style.imageRendering="pixelated",this.canvas.addEventListener("wheel",(t=>{t.preventDefault();const e=Math.sign(t.deltaY);a+=e,this.canvas.style.width=this.file.width*a+"px",this.canvas.style.height=this.file.height*a+"px"})),document.body.querySelector("#main").append(this.canvas);const n=this.ctx.createImageData(16,16);for(let t=0;t>this.file.data.length;t++)for(let e=0;e<16;e++)for(let s=0;s<16;s++){const a=this.file.palette?this.file.palette[this.file.data[t][e][s]]:i[this.file.data[t][e][s]],h=4*(16*e+s);n.data[h]=a[0],n.data[h+1]=a[1],n.data[h+2]=a[2],n.data[h+3]=a[3]}this.ctx.putImageData(n,0,0),this.canvas.addEventListener("click",(t=>{this.savePrevRev(this.ctx.getImageData(0,0,16,16));const e=this.canvas.getBoundingClientRect(),s=Math.floor((t.clientX-e.left)/a),i=4*(16*Math.floor((t.clientY-e.top)/a)+s);n.data[i]=0,n.data[i+1]=0,n.data[i+2]=0,n.data[i+3]=255,this.ctx.putImageData(n,0,0),this.saveNextRev(this.ctx.getImageData(0,0,16,16))})),this.canvas.addEventListener("mousemove",(t=>{if(1===t.buttons){this.savePrevRev(this.ctx.getImageData(0,0,16,16));const e=this.canvas.getBoundingClientRect(),s=Math.floor((t.clientX-e.left)/a),i=4*(16*Math.floor((t.clientY-e.top)/a)+s);n.data[i]=0,n.data[i+1]=0,n.data[i+2]=0,n.data[i+3]=255,this.ctx.putImageData(n,0,0),this.saveNextRev(this.ctx.getImageData(0,0,16,16))}})),document.addEventListener("keydown",(t=>{switch(t.key){case"?":t.preventDefault(),this.helpDialog.toggle();break;case"Escape":t.preventDefault(),this.inputCommand.element.classList.contains("open")?this.inputCommand.close():this.inputCommand.open()}}))}newFile(){console.log("new")}undo(){this.history.prev&&(console.log("undo"),this.ctx.putImageData(this.history.prev,0,0))}redo(){}savePrevRev(t){this.history.prev=t}saveNextRev(t){this.history.next=t}changeTool(t){this.tool=t}}})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,